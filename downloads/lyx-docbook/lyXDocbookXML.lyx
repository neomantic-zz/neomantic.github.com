#LyX 1.5.5 created this file. For more info see http://www.lyx.org/
\lyxformat 276
\begin_document
\begin_header
\textclass docbook
\language english
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\paperfontsize default
\spacing single
\papersize default
\use_geometry false
\use_amsmath 0
\use_esint 0
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Title
Using XSLT to Fix lyX's Docbook XML
\end_layout

\begin_layout Date
August 6, 2008 
\end_layout

\begin_layout Author
\begin_inset CharStyle Firstname
show_label true
status inlined

\begin_layout Standard
Chad
\end_layout

\end_inset


\begin_inset CharStyle Surname
show_label true
status inlined

\begin_layout Standard
Albers
\end_layout

\end_inset


\end_layout

\begin_layout Section
lyX and Docbook XML
\end_layout

\begin_layout Standard
When I write software documentation, I use the 
\begin_inset LatexCommand url
name "lyX"
target "http://www.lyx.org"

\end_inset

 editor.
 Its simplicity allows me to concentrate on the content of what I write,
 rather than what my writing will look like (or it's format).
 I prefer lyX as well because it can export documentation into the 
\begin_inset LatexCommand url
name "Docbook XML"
target "http://www.docbook.org/tdg5/"

\end_inset

 format.
 I can then use 
\begin_inset LatexCommand url
name "Docbook XSL stylesheets"
target "http://docbook.sourceforge.net/release/xsl/current/RELEASE-NOTES.html"

\end_inset

 to convert it into XHTML or PDF documents.
 There are a few things to consider when using lyX to create Docbook XML
 documents.
\end_layout

\begin_layout Subsection
lyX's Limitations
\end_layout

\begin_layout Itemize
lyX was really designed to edit 
\begin_inset LatexCommand url
name "LaTex"
target "http://www.latex-project.org/"

\end_inset

 documents, not XML documents.
\end_layout

\begin_layout Itemize
When lyx's creates a Docbook article using lyX's template mechanism, it
 actually creates an SGML document, not an XML document.
 lyX produces the XML version of the document when you export it by selecting
 the "File" menu "Export" menu item.
 The only difference between the SGML version that is edited and the XML
 version that is exported is the Doctype header stanza; the elements in
 both formats are identical.
\end_layout

\begin_layout Itemize
In the Docbook XML specification, only certain markup elements can be nested
 under other elements.
 lyX, however, does not restrict were elements are inserted.
 Since lyX does not enforce the specification, it is quite possible to introduce
 XML elements that are in the wrong "position" in your Docbook XML document
 (or, in XML-speak, to create a document that is 
\begin_inset Quotes eld
\end_inset

invalid.
\begin_inset Quotes erd
\end_inset

).
 
\end_layout

\begin_layout Itemize
The Docbook XML markup that lyX produces is version 4.2.
 The current version is 5.0.
\end_layout

\begin_layout Itemize
The 
\begin_inset LatexCommand url
name "suite of Docbook XSL stylesheets"
target "http://docbook.sourceforge.net/release/xsl/current/doc/"

\end_inset

 managed by Docbook.org were written for version 5.0, although they are backward
 compatible.
\end_layout

\begin_layout Standard
Taking these into consideration, if you use lyX to create Docbook XML documents,
 the XML format is out of date, possibly contains invalid markup, and may
 be unsuitable for XSLT transformations into PDF or XHTML documents.
\end_layout

\begin_layout Section
Mitigating lyX's Docbook Problems
\end_layout

\begin_layout Standard
To work around some of lyX's Docbook XML problems, you could do the following:
\end_layout

\begin_layout Itemize
Follow these HOWTOs: 
\begin_inset LatexCommand url
name "here"
target "http://bgu.chez-alice.fr/doc/db4lyx/"

\end_inset

 and 
\begin_inset LatexCommand url
name "here"
target "http://www.karakas-online.de/mySGML/"

\end_inset

.
 The former deals with Docbook XML and the later deals with Docbook SGML.
 Both can be helpful.
\end_layout

\begin_layout Itemize
Validate the document using 
\begin_inset LatexCommand url
name "xmllint"
target "http://xmlsoft.org/xmllint.html"

\end_inset

.
 When it finds errors, you will need to consult the 
\begin_inset LatexCommand url
name "Docbook XML specification"
target "http://www.docbook.org/tdg5/"

\end_inset

 to correct the errors manually.
 If you do not want to maintain multiple versions of your document (the
 lyX version and the XML version), you will have to go back to your lyX
 document and figure out why lyX is producing incorrect markup.
\end_layout

\begin_layout Itemize
Convert your Docbook XML 4.x to 5.0 by following these 
\begin_inset LatexCommand url
name "instructions"
target "http://www.docbook.org/docs/howto/#convert4to5"

\end_inset

.
 This may prove useful, but I have notneeded it.
\end_layout

\begin_layout Standard
Since Docbook XML is a based on XML technologies, I recommend instead leveraging
 those technologies to solve lyX's problems.
 The suite of Docbook XSL stylesheets mentioned above can be customized
 to deal with lyX's quirks.
 They can also be used to dramatically alter the PDF and XHTML versions
 of your Docbook documents.
 I have used Bob Stayton's online book called 
\emph on

\begin_inset LatexCommand url
name "DocBook XSL: The Complete Guide"
target "http://www.sagehill.net/book-description.html "

\end_inset


\emph default
 as my reference.
 The next example applies this technique.
\end_layout

\begin_layout Subsection
lyX's <date> element
\end_layout

\begin_layout Standard
Here's how to solve a problem with the 
\begin_inset CharStyle Literal
show_label true
status inlined

\begin_layout Standard
<date>
\end_layout

\end_inset

 element that appears in lyX's Docbook XML.
 According to the 
\begin_inset LatexCommand url
name "Docbook specification"
target "http://www.docbook.org/tdg/en/html/date.html"

\end_inset

, the 
\begin_inset CharStyle Literal
show_label true
status inlined

\begin_layout Standard
<date>
\end_layout

\end_inset

 element is intended to describe the article's publication date.
 It is a child element of the 
\begin_inset CharStyle Literal
show_label true
status inlined

\begin_layout Standard
<articleinfo>
\end_layout

\end_inset

 parent element.
 There is another element, 
\begin_inset CharStyle Literal
show_label true
status inlined

\begin_layout Standard
<pubdate>
\end_layout

\end_inset

, that performs the same function.
 Even though 
\begin_inset CharStyle Literal
show_label true
status inlined

\begin_layout Standard
<date>
\end_layout

\end_inset

 is a valid Docbook XML element, the Docbook XSL stylesheets do not recognize
 the data delimited by this element, and, as a consquence, the data will
 not be included in the transitional format (XSL-FO) that a XSLT transformation
 produces (which will, in turn, be converted to a PDF document, using 
\begin_inset LatexCommand url
name "Apache's Formatting Objects Processor"
target "http://xmlgraphics.apache.org/fop/"

\end_inset

, fop).
 This problem can be fixed by writing a 
\begin_inset LatexCommand url
name "customization layer"
target "http://www.sagehill.net/docbookxsl/CustomMethods.html#CustomizationLayer"

\end_inset

 which manipulates the Docbook XSL stylesheets.
 The instructions below describe how.
\end_layout

\begin_layout Enumerate
Locate where the Docbook XSL stylesheets are stored on your system.
 In the 
\begin_inset LatexCommand url
name "Debian GNU/Linux distribution"
target "http://www.debian.org"

\end_inset

, they are located here:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset CharStyle Literal
show_label true
status inlined

\begin_layout Standard
/usr/share/xml/docbook/stylesheets/nwalsh
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Identify which XSL stylesheets are responsible for transforming Docbook
 XML to a XSL-FO stylesheet:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset CharStyle Literal
show_label true
status inlined

\begin_layout Standard
/usr/share/xml/docbook/stylesheets/nwalsh/fo
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Find the stylesheet (and the template) responsible for processing the 
\begin_inset CharStyle Literal
show_label true
status inlined

\begin_layout Standard
<pubdate>
\end_layout

\end_inset

 element.
 I use grep.
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Standard

<command>
\end_layout

\end_inset

$> grep pubdate /usr/shar/xml/docbook/stylsheets/nwalsh/fo/*
\begin_inset ERT
status open

\begin_layout Standard

</command>
\end_layout

\end_inset


\end_layout

\begin_layout Standard
It was located in a file called, 
\begin_inset Quotes eld
\end_inset


\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
titlepage.template.xsl
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Code
<xsl:apply-templates mode="article.titlepage.recto.auto.mode" select="articleinfo/pu
bdate"/>
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The template which makes this call is found in the same document.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Code
<xsl:template name="article.titlepage.recto">
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Create a XSL stylesheet using your favorite text editor that contains a
 customization layer which, first, overrides the "
\begin_inset CharStyle Literal
show_label true
status inlined

\begin_layout Standard
<xsl:template name="article.titlepage.recto">
\end_layout

\end_inset

" behavior and, second, contains a template that understands the 
\begin_inset CharStyle Literal
show_label true
status inlined

\begin_layout Standard
<date>
\end_layout

\end_inset

 element.
\end_layout

\begin_layout Enumerate
To create the XSL stylesheet, start a new document using your favorite text
 editor and paste this line at the beginning of the document...
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Code
<?xml version='1.0'?>
\end_layout

\begin_layout Code
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
\end_layout

\end_inset

...and this line at the end...
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Code
<xsl:stylesheet>
\end_layout

\end_inset


\end_layout

\begin_layout Standard
...everything you add to the stylesheet in the next steps should be added between
 these two lines.
\end_layout

\end_deeper
\begin_layout Enumerate
Import the URI reference to the Docbook XSL stylesheets by adding this line
 (change the href to match the location of your Docbook XSL stylesheets):
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Code
<xsl:import href="/usr/share/xml/docbook/stylesheet/nwalsh/fo/docbook.xsl"/>
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
In your text editor, open up the file called "
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
titlepage.template.xsl
\end_layout

\end_inset

" that you found in the previous step.
\end_layout

\begin_layout Enumerate
Copy the entire 
\begin_inset CharStyle Literal
show_label true
status inlined

\begin_layout Standard
<template>
\end_layout

\end_inset

 stanza that calls the 
\begin_inset CharStyle Literal
show_label true
status inlined

\begin_layout Standard
<pubdate>
\end_layout

\end_inset

 element.
 From...
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Code
<xsl:template name="article.titlepage.recto">
\end_layout

\end_inset


\end_layout

\begin_layout Standard
...to...
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Code
<xsl:template>
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Paste this into your XSL stylesheet.
\end_layout

\begin_layout Enumerate
Inside the template that you just pasted into your XSL stylesheet, add a
 line to call a template specifically associated with the 
\begin_inset CharStyle Literal
show_label true
status inlined

\begin_layout Standard
<date>
\end_layout

\end_inset

 (remember that it is nested inside an 
\begin_inset CharStyle Literal
show_label true
status inlined

\begin_layout Standard
<articleinfo>
\end_layout

\end_inset

 element):
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Code
<xsl:apply-templates mode="article.titlepage.recto.auto.mode" select="articleinfo/da
te"/>
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Add a template in your XSL stylesheet that responds to the 
\begin_inset CharStyle Literal
show_label true
status inlined

\begin_layout Standard
<xsl:apply-templates>
\end_layout

\end_inset

 call above:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Code
<xsl:template match="articleinfo/date" mode="article.titlepage.recto.auto.mode">
\end_layout

\begin_layout Code
</xsl:template>
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Decide how you would like the 
\begin_inset CharStyle Literal
show_label true
status inlined

\begin_layout Standard
<date>
\end_layout

\end_inset

 data formatted using XSL-FO (fo) elements.
 Since it is the same data as a 
\begin_inset CharStyle Literal
show_label true
status inlined

\begin_layout Standard
<pubdate>
\end_layout

\end_inset

 element, I looked for how the 
\begin_inset CharStyle Literal
show_label true
status inlined

\begin_layout Standard
<pubdate>
\end_layout

\end_inset

 element was handled.
 Fortunately, it was in the 
\begin_inset CharStyle Filename
show_label false
status inlined

\begin_layout Standard
titlepage.template.xsl
\end_layout

\end_inset

 file.
 
\end_layout

\begin_layout Enumerate
Cut and paste the 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
fo
\end_layout

\end_inset

 element from 
\begin_inset Quotes eld
\end_inset

articleinfo/pubdate
\begin_inset Quotes erd
\end_inset

 template into your 
\begin_inset Quotes eld
\end_inset

articleinfo/date
\begin_inset Quotes erd
\end_inset

 template .
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Code
<fo:block xmlns:fo="http://www.w3.org/1999/XSL/Format" xsl:use-attribute-sets="set.
titlepage.recto.style">
\end_layout

\begin_layout Code
     <xsl:apply-templates select="." mode="set.titlepage.recto.mode"/>
\end_layout

\begin_layout Code
</fo:block>
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Now save your custom XSL stylesheet to, say, 
\begin_inset CharStyle Filename
show_label true
status inlined

\begin_layout Standard
my-customized-docbook-stylesheet.xsl
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
Using this XSL stylesheet, you can now produce a XSL-FO stylesheet that
 contains the data of a 
\begin_inset CharStyle Literal
show_label true
status inlined

\begin_layout Standard
<date>
\end_layout

\end_inset

 element.
 I use 
\begin_inset CharStyle Literal
show_label true
status inlined

\begin_layout Standard
\begin_inset LatexCommand url
name "xsltproc"
target "http://xmlsoft.org/XSLT/xsltproc2.html"

\end_inset


\end_layout

\end_inset

, (but xalan or saxon will work, too) to apply the custom stylesheet to
 my Docbook XML document.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Standard

<command>
\end_layout

\end_inset

$> xsltproc my-customized-docbook-stylesheet.xsl lyX-produced-docbookXML-file.xml
\begin_inset ERT
status open

\begin_layout Standard

</command>
\end_layout

\end_inset


\end_layout

\begin_layout Standard
An XSL-FO document (fo output) will be sent to the standard output.
 I save this output to a file by appending the following to the command
 line above: "
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
> output.fo
\end_layout

\end_inset

".
 Once you have have the XSL-FO document produced by these commands, you
 can now run the file through Apache's fop to produce your PDF document.
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard

<command>
\end_layout

\end_inset

$> fop -fo output.fo -pdf output.pdf
\begin_inset ERT
status collapsed

\begin_layout Standard

</command>
\end_layout

\end_inset


\end_layout

\begin_layout Section
Tutorial Documents, Samples, and Stylesheets
\end_layout

\begin_layout Standard
Following the method above, 
\begin_inset LatexCommand url
name "here"
target "http://www.neomantic.com/downloads/lyx-docbook/lyXDocbookXML.pdf"

\end_inset

 is a link to a pdf version of this tutorial.
 
\begin_inset LatexCommand url
name "Here"
target "http://www.neomantic.com/downloads/lyx-docbook/lyxdbXML2fo-xsl.xsl"

\end_inset

 is a link to a customized stylesheet that produced this sample.
 It recognizes the 
\begin_inset CharStyle Literal
show_label true
status inlined

\begin_layout Standard
<date>
\end_layout

\end_inset

 element that lyX produces.
 The stylesheet also contains a few more tricks.
 It recognizes the 
\begin_inset CharStyle Literal
show_label false
status inlined

\begin_layout Standard
<command>
\end_layout

\end_inset

 element (inserted using lyX's ERT function) and surrounds a command line
 with a grey box.
 It also handles source code samples that have been inserted into your lyX
 document as 
\begin_inset Quotes eld
\end_inset

Figures
\begin_inset Quotes erd
\end_inset

 and marked as 
\begin_inset Quotes eld
\end_inset

Code
\begin_inset Quotes erd
\end_inset

.
 You can see how these tricks were accomplished by viewing the 
\begin_inset LatexCommand url
name "original lyX document"
target "http://www.neomantic.com/downloads/lyx-docbook/lyXDocbookXML.lyx"

\end_inset

 that this document is based on.
\end_layout

\begin_layout Standard
In addition, I am also releasing a customized Docbook XSL stylesheet that
 will produce XHTML version that is a near duplicate of the PDF version.
 The link is 
\begin_inset LatexCommand url
name "here"
target "http://www.neomantic.com/downloads/lyx-docbook/lyxdbXML2xhtml.xsl"

\end_inset

.
\end_layout

\begin_layout Standard
All documents produced in this tutorial can be downloaded from 
\begin_inset LatexCommand url
name "here"
target "http://www.neomantic.com/downloads/lyx-docbook/lyXDocbookCustomizations.tar.gz"

\end_inset

.
 A gpg signature for this file is located 
\begin_inset LatexCommand url
name "here"
target "http://www.neomantic.com/downloads/lyx-docbook/lyXDocbookCustomizations.tar.gz.sign"

\end_inset

.
 (My public key is on my website: 
\begin_inset LatexCommand url
name "http://www.neomantic.com"
target "http://www.neomantic.com"

\end_inset

.)
\end_layout

\begin_layout Section
Documentation License
\end_layout

\begin_layout Standard
This tutorial is released under the 
\begin_inset LatexCommand url
name "GNU Free Documentation License Version 1.2"
target "http://www.gnu.org/licenses/fdl.html"

\end_inset

.
 
\end_layout

\begin_layout Standard
Copyright (c) C.
 Albers.
 Permission is granted to copy, distribute and/or modify this document under
 the terms of the GNU Free Documentation License, Version 1.2 or any later
 version published by the Free Software Foundation; with no Invariant Sections,
 no Front-Cover Texts, and no Back-Cover Texts.
 A copy of the license is included in the section entitled "GNU Free Documentati
on License".
 
\end_layout

\begin_layout Standard
The full text of this license is found in the file called 
\begin_inset Quotes sld
\end_inset


\begin_inset CharStyle Filename
show_label true
status inlined

\begin_layout Standard
fdl.txt
\end_layout

\end_inset


\begin_inset Quotes srd
\end_inset

 released with tarred, gzipped file of this documentation.
\end_layout

\begin_layout Section
Contact
\end_layout

\begin_layout Standard
Please direct questions or requests for more information to 
\begin_inset CharStyle Email
show_label true
status inlined

\begin_layout Standard
chad@neomantic.com
\end_layout

\end_inset

.
 Corrections, suggestions, bug reports, and patches are welcome as well.
\end_layout

\end_body
\end_document
